@using Easyourtour.Models.ViewModel
@model TripPlanVM

@{
    ViewData["Title"] = "Create Template";
}

<h2>Create Template</h2>

<form asp-action="CreateTemplate" method="post">
    <!-- Section 1: Basic Information -->
    <div id="section1" class="box-section">
        <div class="form-group">
            <label asp-for="TemplateName"></label>
            <input asp-for="TemplateName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Number of Adults</label>
            <input asp-for="NumberOfAdults" class="form-control" />
        </div>
        <div class="form-group">
            <label>Number of Kids</label>
            <input asp-for="NumberOfKids" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="StartDate"></label>
            <input asp-for="StartDate" type="date" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="NumberOfDays"></label>
            <input asp-for="NumberOfDays" id="NumberOfDays" class="form-control" />
        </div>
        <div class="form-group">
            <label>Star Rating Preference</label>
            <select asp-for="StarRatingPreference" id="StarRating" class="form-control" multiple>
                <option value="3">3 Stars</option>
                <option value="4">4 Stars</option>
                <option value="5">5 Stars</option>
            </select>
        </div>
        <button type="button" id="loadSection2" class="btn btn-primary">Next</button>
    </div>

    <!-- Section 2: Hotel Selection -->
    <div id="section2" style="display:none;" class="box-section">
        <h3>Hotel Selection</h3>
        <div id="optionsContainer">
            <div class="option-group" data-option="1">
                <h4>Option 1</h4>
                <table id="hotelTable_1" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Day</th>
                            <th>Destination</th>
                            <th>Location</th>
                            <th>Hotel</th>
                            <th>Hotel Room</th>
                            <th>Capacity</th>
                            <th>No. of Extra Beds</th>
                            <th>Inclusions</th>
                            <th>No. of Rooms</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be inserted dynamically -->
                    </tbody>
                </table>
            </div>
        </div>
        <button type="button" id="addOption" class="btn btn-secondary">Add Another Option</button>
    </div>

    <!-- Section 3: Travel and Sightseeing -->
    <div id="section3" style="display:none;" class="box-section">
        <h3>Travel and Sightseeing</h3>
        <div id="travelOptionsContainer">
            <div class="option-group" data-option="1">
                <h4>Option 1</h4>
                <table id="travelTable_1" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Day</th>
                            <th>Car Type</th>
                            <th>Kilometers</th>
                            <th>Sightseeing Spots</th>
                            <th>Miscellaneous</th>
                            <th>Base Price</th>
                            <th>Base Distance</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be inserted dynamically -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Section 4: Final Costs for Each Option -->
    <div id="section4" style="display:none;" class="box-section">
        <h3>Final Cost</h3>
        <div id="costSummaryContainer">
            <!-- Summary of costs will be inserted dynamically -->
        </div>
        <button type="submit" class="btn btn-success">Save Template</button>
    </div>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            let optionCount = 1;

            $('#loadSection2').click(function () {
                const days = $('#NumberOfDays').val();
                if (days > 0) {
                    $('#section2').show();
                    initializeItineraryTable(optionCount, days);
                    $('#section3').show();
                    initializeTravelTable(optionCount, days);
                    $('#section4').show();
                }
            });

           $('#addOption').click(function () {
    optionCount++;
    const newOption = duplicateOption(optionCount);

    // Append only the new hotel table to the options container
    $('#optionsContainer').append(newOption.hotelTable);

    // Re-initialize the new hotel table with correct day rows and event handlers
    initializeItineraryTable(optionCount, $('#NumberOfDays').val());
});


            function initializeItineraryTable(option, days) {
                const tbody = $(`#hotelTable_${option} tbody`);
                tbody.empty();
                for (let i = 1; i <= days; i++) {
                    let row = `<tr data-day="${i}">
                                            <td>${i}</td>
                                            <td>
                                                <select class="form-control destination-dropdown" name="DestinationandHotels[${option}].Days[${i}].DestinationId" data-day="${i}">
                                                    <option value="">-- Select Destination --</option>
        @foreach (var dest in ViewBag.Destinations)
        {
                                                            <option value="@dest.Value">@dest.Text</option>
        }
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control location-dropdown" name="DestinationandHotels[${option}].Days[${i}].LocationId" data-day="${i}">
                                                    <option value="">-- Select Location --</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control hotel-dropdown" name="DestinationandHotels[${option}].Days[${i}].HotelId" data-day="${i}">
                                                    <option value="">-- Select Hotel --</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control hotelroom-dropdown" name="DestinationandHotels[${option}].Days[${i}].HotelRoomId" data-day="${i}">
                                                    <option value="">-- Select Hotel Room --</option>
                                                </select>
                                            </td>
                                            <td><input type="text" class="form-control capacity" data-day="${i}" readonly /></td>
                                            <td><input type="number" class="form-control extra-beds" placeholder="Number of Extra Beds" /></td>
                                            <td><input type="text" class="form-control inclusions" data-day="${i}" readonly /></td>
                                            <td><input type="number" class="form-control num-rooms" /></td>
                                        </tr>`;
                    tbody.append(row);
                }
                attachDropdownHandlers(option);
            }

            function initializeTravelTable(option, days) {
                const tbody = $(`#travelTable_${option} tbody`);
                tbody.empty();
                for (let i = 1; i <= days; i++) {
                    let row = `<tr data-day="${i}">
                                        <td>${i}</td>
                                        <td>
                                            <select class="form-control transport-dropdown" name="TravelandSightSeeingSpots[${option}].Days[${i}].CarTypeId" data-day="${i}">
                                                <option value="">-- Select Car Type --</option>
                                            </select>
                                        </td>
                                        <td><input type="number" class="form-control kilometers-input" name="TravelandSightSeeingSpots[${option}].Days[${i}].Kilometers" /></td>
                                        <td>
    <select class="form-control sightseeing-dropdown" name="TravelandSightSeeingSpots[${option}].Days[${i}].SightseeingIds" data-day="${i}" multiple>
      
    </select>
</td>

                                        <td><input type="text" class="form-control miscellaneous-input" name="TravelandSightSeeingSpots[${option}].Days[${i}].Miscellaneous" /></td>
                                        <td><input type="text" class="form-control base-price" data-day="${i}" readonly /></td>
                                        <td><input type="text" class="form-control base-distance" data-day="${i}" readonly /></td>
                                    </tr>`;
                    tbody.append(row);
                }
                attachDropdownHandlers(option);
            }

            function attachDropdownHandlers(option) {
                $('.destination-dropdown').change(function () {
                    const day = $(this).data('day');
                    const destinationId = $(this).val();
                    if (destinationId) {
                        loadLocations(destinationId, day, option);
                    }
                });

                $('.location-dropdown').change(function () {
                    const day = $(this).data('day');
                    const locationId = $(this).val();
                    if (locationId) {
                        loadTransportDetails(locationId, day, option);
                        loadHotels(locationId, day, option);
                        loadSightseeings(locationId, day, option);
                    }
                });

                $('.hotel-dropdown').change(function () {
                    const day = $(this).data('day');
                    const hotelId = $(this).val();

                    if (hotelId) {
                        loadHotelRooms(hotelId, day, option);
                    }
                });

                $(`.extra-beds`).change(function () {
                    calculateTotalCost(option);
                });
            }

function duplicateOption(optionCount) {
    // Clone the hotel table
    const newHotelTable = $(`#hotelTable_1`).clone().prop('id', `hotelTable_${optionCount}`);

    // Update the name attributes for all the input fields inside the new hotel table
    updateTableFieldNames(newHotelTable, optionCount, 'DestinationandHotels');

    // Clear any previous entries in the cloned hotel table
    newHotelTable.find('tbody').empty();

    return {
        hotelTable: newHotelTable.wrap('<div class="option-group" data-option="' + optionCount + '"></div>').parent()
    };
}

// Update the name attributes dynamically for the hotel table only
function updateTableFieldNames(table, optionCount, fieldNamePrefix) {
    table.find('select, input').each(function () {
        let nameAttr = $(this).attr('name');
        if (nameAttr) {
            nameAttr = nameAttr.replace(/(DestinationandHotels)\[\d+\]/, fieldNamePrefix + '[' + optionCount + ']');
            $(this).attr('name', nameAttr);
        }
    });
}

            function loadLocations(destinationId, day, option) {
                const locationDropdown = $(`.location-dropdown[data-day="${day}"]`);
                $.ajax({
                    url: '/TripPlanner/GetLocations/' + destinationId,
                    type: 'GET',
                    success: function (data) {
                        locationDropdown.empty().append('<option value="">-- Select Location --</option>');
                        $.each(data, function (i, location) {
                            locationDropdown.append('<option value="' + location.id + '">' + location.name + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching locations:", error);
                    }
                });
            }

            function loadHotels(locationId, day, option) {
                const hotelDropdown = $(`.hotel-dropdown[data-day="${day}"]`);
                const starRatings = $('#StarRating').val();

                $.ajax({
                    url: '/TripPlanner/GetHotels',
                    type: 'GET',
                    data: {
                        locationId: locationId,
                        starRatings: starRatings
                    },
                    success: function (data) {
                        hotelDropdown.empty().append('<option value="">-- Select Hotel --</option>');
                        $.each(data, function (i, hotel) {
                            hotelDropdown.append('<option value="' + hotel.id + '">' + hotel.name + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching hotels:", error);
                    }
                });
            }

            function loadHotelRooms(hotelId, day, option) {
                const hotelRoomDropdown = $(`.hotelroom-dropdown[data-day="${day}"]`);

                $.ajax({
                    url: '/TripPlanner/GetHotelRooms',
                    type: 'GET',
                    data: { hotelId: hotelId },
                    success: function (data) {
                        hotelRoomDropdown.empty().append('<option value="">-- Select Hotel Room --</option>');
                        $.each(data, function (i, room) {
                            hotelRoomDropdown.append(`<option value="${room.id}" data-capacity="${room.capacity}" data-extracharge="${room.extraChargePerPerson}" data-inclusions="${room.inclusions}">${room.roomType}</option>`);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching hotel rooms:", error);
                    }
                });

                hotelRoomDropdown.change(function () {
                    const selectedOption = $(this).find('option:selected');
                    const capacity = selectedOption.data('capacity');
                    const inclusions = selectedOption.data('inclusions');
                    const extraChargePerPerson = selectedOption.data('extracharge');

                    // Populate capacity and inclusions fields
                    $(`input.capacity[data-day="${day}"]`).val(capacity);
                    $(`input.inclusions[data-day="${day}"]`).val(inclusions);



                    // Store extra charge for calculation
                    $(`.extra-charge[data-day="${day}"]`).data('extracharge', extraChargePerPerson);

                    // Recalculate the total cost whenever room selection changes
                    calculateTotalCost(option);
                });
            }

            function loadTransportDetails(locationId, day, option) {
                const transportDropdown = $(`.transport-dropdown[data-day="${day}"]`);

                $.ajax({
                    url: `/TripPlanner/GetTransports/${locationId}`,
                    type: 'GET',
                    success: function (data) {
                        transportDropdown.empty().append('<option value="">-- Select car type--</option>');
                        $.each(data, function (i, transport) {
                            transportDropdown.append(`<option value="${transport.id}" data-basePrice="${transport.basePrice}" data-baseDistance="${transport.baseDistance}" data-pricePerKm="${transport.pricePerKm}">${transport.carType}</option>`);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching transport details:", error);
                    }
                });

                transportDropdown.change(function () {
                    const selectedOption = $(this).find('option:selected');
                    const basePrice = selectedOption.data('baseprice');
                    const baseDistance = selectedOption.data('basedistance');

                    $(`input.base-price[data-day="${day}"]`).val(basePrice);
                    $(`input.base-distance[data-day="${day}"]`).val(baseDistance);

                    // Recalculate the total cost whenever room selection changes
                    calculateTotalCost(option);
                });
            }

function loadSightseeings(locationId, day, option) {
    // Select the correct sightseeing dropdown based on the day and option
    const sightseeingDropdown = $(`.sightseeing-dropdown[data-day="${day}"]`);
    console.log(sightseeingDropdown);

    $.ajax({
        url: `/TripPlanner/GetSightseeings/${locationId}`,
        type: 'GET',
        success: function (data) {
            // Clear previous options
            sightseeingDropdown.empty()

            
            // Iterate over the data and append options
            $.each(data, function (i, sight) {
                sightseeingDropdown.append(`<option value="${sight.id}">${sight.name}</option>`);
            });

            // Reinitialize multi-select if you're using any plugin like Select2
            sightseeingDropdown.attr("multiple", "multiple");
        },
        error: function (xhr, status, error) {
            console.error("Error fetching sightseeing spots:", error);
        }
    });
}


            function calculateTotalCost(option) {
                let totalHotelCost = 0;
                let totalTravelCost = 0;

                // Calculate hotel costs
                $(`#hotelTable_${option} tbody tr`).each(function () {
                    const day = $(this).data('day');
                    const numRooms = parseInt($(`.num-rooms[data-day="${day}"]`).val()) || 0;
                    const extraBeds = parseInt($(`.extra-beds[data-day="${day}"]`).val()) || 0;
                    const extraChargePerPerson = parseFloat($(`.hotelroom-dropdown[data-day="${day}"] option:selected`).data('extracharge')) || 0;

                    const roomCost = numRooms * extraChargePerPerson;
                    totalHotelCost += roomCost + (extraBeds * extraChargePerPerson);
                });

                // Calculate travel costs
                $(`#travelTable_${option} tbody tr`).each(function () {
                    const day = $(this).data('day');
                    const basePrice = parseFloat($(`.base-price[data-day="${day}"]`).val()) || 0;
                    const kilometers = parseFloat($(`.kilometers-input[data-day="${day}"]`).val()) || 0;
                    const baseDistance = parseFloat($(`.base-distance[data-day="${day}"]`).val()) || 0;
                    const pricePerKm = parseFloat($(`.transport-dropdown[data-day="${day}"] option:selected`).data('priceperkm')) || 0;

                    const travelCost = basePrice + ((kilometers > baseDistance) ? (kilometers - baseDistance) * pricePerKm : 0);
                    totalTravelCost += travelCost;
                });

                const grandTotal = totalHotelCost + totalTravelCost;

                // Update the costs in the UI
                $(`#costSummaryContainer .option-group[data-option="${option}"] .hotelCost`).text(totalHotelCost.toFixed(2));
                $(`#costSummaryContainer .option-group[data-option="${option}"] .travelCost`).text(totalTravelCost.toFixed(2));
                $(`#costSummaryContainer .option-group[data-option="${option}"] .grandTotal`).text(grandTotal.toFixed(2));
            }
        });
    </script>
}
